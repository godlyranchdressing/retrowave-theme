/***********
 * Buttons *
 ***********/
// stuff for .needs-attention;
@keyframes needs_attention {
  from {
    background-size: 0px;
  }
  to {
    background-size: 6px;
  }
}

%button,
button {
  @at-root %button_basic,
    & {
    min-height: 24px;
    min-width: 16px;
    padding: 4px 9px;
    border: 1px solid;
    border-radius: $button_radius;
    transition: $button_transition;

    @include button(normal);

    &.flat {
      @include button(undecorated);
      // to avoid adiacent buttons borders clashing when transitioning, the transition on the normal state is set
      // to none, while it's added back in the hover state, so the button decoration will fade in on hover, but
      // it won't fade out when the pointer leave the button allocation area. To make the transition more evident
      // in this case the duration is increased.
      transition: none;

      &:hover {
        transition: $button_transition;
        transition-duration: 500ms;

        &:active {
          transition: $button_transition;
        }
      }

      &:disabled {
        &,
        > * {
          opacity: 0.8;
        }
      }
    }

    &:hover {
      @include button(hover);
      -gtk-icon-filter: brightness(1.2);
    }

    &:active,
    &:checked {
      @include button(active);

      transition-duration: 50ms;
    }

    &:backdrop {
      &.flat,
      & {
        @include button(backdrop);

        transition: $backdrop_transition;
        -gtk-icon-filter: none;

        &:active,
        &:checked {
          @include button(backdrop-active);
        }

        &:disabled {
          @include button(backdrop-insensitive);

          &:active,
          &:checked {
            @include button(backdrop-insensitive-active);
          }
        }
      }
    }

    &.flat {
      &:backdrop,
      &:disabled,
      &:backdrop:disabled {
        @include button(undecorated);
      }
    }

    &.flat:disabled,
    &:disabled {
      @include button(insensitive);

      &:active,
      &:checked {
        @include button(insensitive-active);
      }
    }

    &.image-button {
      min-width: 24px;
      padding-left: 5px;
      padding-right: 5px;
    }

    &.text-button {
      padding-left: 16px;
      padding-right: 16px;
    }

    &.text-button.image-button {
      padding-left: 8px;
      padding-right: 8px;

      label {
        padding-left: 8px;
        padding-right: 8px;
      }
    }

    &:drop(active) {
      color: $drop_target_color;
      border-color: $drop_target_color;
      box-shadow: inset 0 0 0 1px $drop_target_color;
    }
  }

  @at-root %button_selected,
    & {
    row:selected & {
      &.flat:not(:active):not(:checked):not(:hover):not(disabled) {
        color: $selected_fg_color;
        border-color: transparent;

        &:backdrop {
          color: $backdrop_fg_color;
        }
      }
    }
  }

  // big standalone buttons like in Documents pager
  &.osd {
    min-width: 26px;
    min-height: 32px;

    &.image-button {
      min-width: 30px;
      &:only-child {
        margin: 4px;
        border-radius: 0; // completely round when it is a single button
        box-shadow: 0 1px 2px transparentize(black, 0.8); // drop shadow for the only child
      }
    }

    color: $osd_fg_color;
    border-radius: 0px;

    @include button(normal);

    border: none;
    box-shadow: none;

    &:hover {
      @include button(hover);

      border: none;
      box-shadow: none;
    }

    &:active,
    &:checked {
      @include button(active);

      border: none;
      box-shadow: none;
    }

    &:disabled {
      &:backdrop,
      & {
        @include button(insensitive);

        border: none;
      }
    }

    &:backdrop {
      @include button(backdrop);

      border: none;
    }
  }

  //overlay / OSD style
  @at-root %osd_button,
    .osd & {
    @include button(normal);

    &:hover {
      @include button(hover);
    }

    &:active,
    &:checked {
      &:backdrop,
      & {
        @include button(active);
      }
    }

    &:disabled {
      &:backdrop,
      & {
        @include button(insensitive);
      }
    }

    &:backdrop {
      @include button(backdrop);
    }

    &.flat {
      @include button(undecorated);

      box-shadow: none; //FIXME respect no edge on the button mixin
      text-shadow: 0 1px black;
      -gtk-icon-shadow: 0 1px black;

      &:hover {
        @include button(hover);
      }

      &:disabled {
        @include button(insensitive);
        background-image: none;
        border-color: transparent;
        box-shadow: none;
      }

      &:backdrop {
        @include button(undecorated);
      }

      &:active,
      &:checked {
        @include button(active);
      }
    }
  }

  // Suggested and Destructive Action buttons
  @each $b_type, $b_color in (suggested-action, $success_color),
    (destructive-action, $destructive_color)
  {
    &.#{$b_type} {
      @include button(normal, $b_color, white, true);

      &.flat {
        @include button(undecorated);
        color: $b_color;
      }

      &:hover {
        @include button(hover, $b_color, white, true);
      }

      &:active,
      &:checked {
        @include button(active, $b_color, white);
      }

      &:backdrop,
      &.flat:backdrop {
        @include button(backdrop, $b_color, white);

        &:active,
        &:checked {
          @include button(backdrop-active, $b_color, white);
        }

        &:disabled {
          @include button(backdrop-insensitive);

          &:active,
          &:checked {
            @include button(backdrop-insensitive-active, $b_color, white);
          }
        }
      }

      &.flat {
        &:backdrop,
        &:disabled,
        &:backdrop:disabled {
          @include button(undecorated);

          color: transparentize($b_color, 0.2);
        }
      }

      &:disabled {
        @include button(insensitive);

        &:active,
        &:checked {
          @include button(insensitive-active, $b_color, white);
        }
      }

      .osd & {
        @include button(normal, $b_color, white, true);

        &:hover {
          @include button(hover, $b_color, white, true);
        }

        &:active,
        &:checked {
          &:backdrop,
          & {
            @include button(active, $b_color);
          }
        }

        &:disabled {
          &:backdrop,
          & {
            @include button(insensitive, $b_color);
          }
        }

        &:backdrop {
          @include button(backdrop, $b_color);
        }
      }
    }
  }

  .stack-switcher > & {
    // to position the needs attention dot, padding is added to the button
    // child, a label needs just lateral padding while an icon needs vertical
    // padding added too.

    outline-offset: -3px; // needs to be set or it gets overriden by GtkRadioButton outline-offset

    > label {
      padding-left: 6px; // label padding
      padding-right: 6px; //
    }

    > image {
      padding-left: 6px; // image padding
      padding-right: 6px; //
      padding-top: 3px; //
      padding-bottom: 3px; //
    }

    &.text-button {
      // compensate text-button paddings
      padding-left: 10px;
      padding-right: 10px;
    }

    &.image-button {
      // we want image buttons to have a 1:1 aspect ratio, so compensation
      // of the padding added to the GtkImage is needed
      padding-left: 2px;
      padding-right: 2px;
    }

    &.needs-attention {
      > label,
      > image {
        @extend %needs_attention;
      }

      &:active,
      &:checked {
        > label,
        > image {
          animation: none;
          background-image: none;
        }
      }
    }
  }

  // hide separators
  &.font {
    separator {
      background-color: transparent;
    }
    > box {
      // border-spacing: 6px;
    }
    > box > box > label {
      font-weight: bold;
    }
  }

  // inline-toolbar buttons
  .inline-toolbar & {
    @extend %linked;
  }

  .primary-toolbar & {
    -gtk-icon-shadow: none;
  } // tango icons don't need shadows

  .linked:not(.vertical) > & {
    @extend %linked;
  }

  .linked.vertical > & {
    @extend %linked_vertical;
  }

  &.circular {
    // The Bloody Circul Button
    border-radius: 9999px;
    -gtk-outline-radius: 9999px;

    label {
      padding: 0;
    }
  }
}

%needs_attention {
  // the dot is drawn by using two radial gradient, the first one is the actuall dot, the other
  // simulates the shadow labels and icons normally have in buttons.
  animation: needs_attention 150ms ease-in;
  $_dot_shadow: _text_shadow_color(); // shadow color

  background-image: url("assets/dot.svg");
  background-position: center;
  background-repeat: no-repeat;

  background-position: right 3px, right 2px;

  &:backdrop {
    background-size: 6px 6px, 0 0;
  }

  &:dir(rtl) {
    background-position: left 3px, left 2px;
  }
}

// all the following is for the +|- buttons on inline toolbars, that way
// should really be deprecated...
.inline-toolbar toolbutton > button {
  // redefining the button look is
  // needed since those are flat...
  @include button(normal);

  &:hover {
    @include button(hover);
  }

  &:active,
  &:checked {
    @include button(active);
  }

  &:disabled {
    @include button(insensitive);

    &:active,
    &:checked {
      @include button(insensitive-active);
    }
  }

  &:backdrop {
    @include button(backdrop);

    &:active,
    &:checked {
      @include button(backdrop-active);
    }

    &:disabled {
      @include button(backdrop-insensitive);

      &:active,
      &:checked {
        @include button(backdrop-insensitive-active);
      }
    }
  }
}

// More inline toolbar buttons
toolbar.inline-toolbar toolbutton {
  &:not(:first-child) > button.flat {
    @extend %linked:not(:first-child);
  }
  &:not(:last-child) > button.flat {
    @extend %linked:not(:last-child);
  }
}

%linked_not_left {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

%linked_not_right {
  border-right-style: none;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

// 1st/last child are at text start/end
%linked {
  &:dir(ltr) {
    &:not(:first-child) {
      @extend %linked_not_left;
    }
    &:not(:last-child) {
      @extend %linked_not_right;
    }
  }

  &:dir(rtl) {
    &:not(:first-child) {
      @extend %linked_not_right;
    }
    &:not(:last-child) {
      @extend %linked_not_left;
    }
  }
}

%linked_vertical {
  &:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }

  &:not(:last-child) {
    border-bottom-style: none;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
}

%undecorated_button {
  background-color: transparent;
  background-image: none;
  border-color: transparent;
  box-shadow: inset 0 1px transparentize(white, 1),
    0 1px transparentize(white, 1);
  text-shadow: none;
  -gtk-icon-shadow: none;
}

/* menu buttons */
modelbutton.flat,
.menuitem.button.flat {
  min-height: 26px;
  padding-left: 5px;
  padding-right: 5px;
  border-radius: $button_radius;
  outline-offset: -2px;

  @extend %undecorated_button;

  &:hover {
    background-color: $popover_hover_color;
  }

  &:selected {
    @extend %selected_items;
  }

  &:backdrop,
  &:backdrop:hover {
    @extend %undecorated_button;
  }
}

modelbutton.flat arrow {
  background: none;
  min-width: 16px;
  min-height: 16px;

  &:hover {
    background: none;
  }

  &.left {
    -gtk-icon-source: -gtk-icontheme("pan-start-symbolic");
  }

  &.right {
    -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
  }
}

button.color {
  padding: 4px;

  colorswatch:only-child {
    &,
    overlay {
      border-radius: 0;
    }
  }
}

/* list buttons */
/* tone down as per new designs, see issue #1473 */
list row button.image-button:not(.flat) {
  @extend %undecorated_button;
  border: 1px solid transparentize($borders_color, 0.5);
  &:hover {
    @include button(hover);
  }
  &:active,
  &:checked {
    @include button(active);
  }
}
