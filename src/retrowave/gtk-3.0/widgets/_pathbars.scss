/************
 * Pathbars *
 ************/

.path-bar button {
  &.text-button,
  &.image-button,
  & {
    padding-left: 4px;
    padding-right: 4px;
  }

  &.text-button.image-button label {
    padding-left: 0;
    padding-right: 0;
  }

  &.text-button.image-button,
  & {
    label:last-child {
      padding-right: 8px;
    }
    label:first-child {
      padding-left: 8px;
    }
  }

  image {
    padding-left: 4px;
    padding-right: 4px;
  }

  &.slider-button {
    padding-left: 0;
    padding-right: 0;
  }
}

/**************
   * Tree Views *
   **************/
treeview.view {
  border-left-color: mix(
    $fg_color,
    $base_color,
    50%
  ); // this is actually the tree lines color,
  border-top-color: $bg_color; // while this is the grid lines color, better then nothing

  rubberband {
    @extend rubberband;
  } // to avoid borders being overridden by the previously set props

  &:selected {
    &:focus,
    & {
      border-radius: 0;

      @extend %selected_items;
    }

    &:backdrop,
    & {
      border-left-color: mix($selected_fg_color, $selected_bg_color, 50%);
      border-top-color: transparentize(
        $fg_color,
        0.9
      ); // doesn't work unfortunatelly
    }
  }

  &:disabled {
    color: $insensitive_fg_color;

    &:selected {
      color: mix($selected_fg_color, $selected_bg_color, 40%);
      &:backdrop {
        color: mix($backdrop_selected_fg_color, $selected_bg_color, 30%);
      }
    }

    &:backdrop {
      color: $backdrop_insensitive_color;
    }
  }

  &.separator {
    min-height: 2px;
    color: $bg_color;

    &:backdrop {
      color: transparentize($bg_color, 0.9);
    }
  }

  &:backdrop {
    border-left-color: mix($backdrop_fg_color, $backdrop_bg_color, 50%);
    border-top: $backdrop_bg_color;
  }
  &:drop(active) {
    border-style: solid none;
    border-width: 1px;
    border-color: $selected_borders_color;

    &.after {
      border-top-style: none;
    }

    &.before {
      border-bottom-style: none;
    }
  }

  &.expander {
    // GtkTreeView uses the larger of the expanderâ€™s min-width and min-height
    min-width: 16px;
    min-height: 16px;
    -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");

    &:dir(rtl) {
      -gtk-icon-source: -gtk-icontheme("pan-end-symbolic-rtl");
    }

    color: mix($text_color, $base_color, 70%);

    &:hover {
      color: $text_color;
    }

    &:selected {
      color: mix($selected_fg_color, $selected_bg_color, 70%);

      &:hover {
        color: $selected_fg_color;
      }

      &:backdrop {
        color: mix($backdrop_selected_fg_color, $selected_bg_color, 70%);
      }
    }

    &:checked {
      -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
    }

    &:backdrop {
      color: mix($backdrop_fg_color, $backdrop_base_color, 70%);
    }
  }

  &.progressbar {
    // progress bar in treeviews
    @extend %scale_highlight;

    &:selected {
      &:focus,
      & {
        box-shadow: inset 0 1px transparentize(white, 0.95);
        background-image: image($selected_fg_color);

        &:backdrop {
          background-color: $backdrop_base_color;
        }
      }
    }

    &:backdrop {
      background-image: none;
      box-shadow: none;
    }
  }

  &.trough {
    // progress bar trough in treeviews
    background-color: transparentize($fg_color, 0.9);

    &:selected {
      &:focus,
      & {
        background-color: darken($selected_bg_color, 10%);
      }
    }
  }

  header {
    button {
      $_column_header_color: mix($fg_color, $base_color, 50%);

      @extend %column_header_button;

      color: $_column_header_color;
      background-color: $base_color;
      font-weight: bold;
      text-shadow: none;
      box-shadow: none;

      &:hover {
        @extend %column_header_button;

        color: mix($_column_header_color, $fg_color, 50%);
        box-shadow: none;
        transition: none; //I shouldn't need this
      }

      &:active {
        @extend %column_header_button;

        color: $fg_color;
        transition: none; //I shouldn't need this
      }
    }
  }

  button.dnd,
  header.button.dnd {
    // for treeview-like derive widgets
    &:active,
    &:selected,
    &:hover,
    & {
      padding: 0 6px;
      color: $base_color;
      background-image: none;
      background-color: $selected_bg_color;
      border-style: none;
      border-radius: 0;
      box-shadow: inset 0 0 0 1px $base_color;
      text-shadow: none;
      transition: none;
    }
  }

  acceleditor > label {
    background-color: $focus_color;
  } // see tests/testaccel to test
}

%column_header_button {
  padding: 0 6px;
  background-image: none;
  border-style: none solid solid none;
  border-color: $bg_color;
  border-radius: 0;
  text-shadow: none;

  &:disabled {
    border-color: $bg_color;
    background-image: none;
  }

  &:backdrop {
    color: mix($backdrop_fg_color, $backdrop_bg_color, 50%);
    border-color: $backdrop_bg_color;
    border-style: none solid solid none;
    background-image: none;
    background-color: $backdrop_base_color;

    &:disabled {
      border-color: $backdrop_bg_color;
      background-image: none;
    }
  }

  &:last-child {
    &:backdrop,
    & {
      border-right-style: none;
    }
  }
}
